"use strict";(self.webpackChunkddupg_github_io=self.webpackChunkddupg_github_io||[]).push([[8124],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,f=m["".concat(c,".").concat(d)]||m[d]||s[d]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(3117),i=(n(7294),n(3905));const o={},a=void 0,l={unversionedId:"Algorithm/\u4e8c\u5206",id:"Algorithm/\u4e8c\u5206",title:"\u4e8c\u5206",description:"\u6570\u7ec4\u4e8c\u5206",source:"@site/docs/Algorithm/\u4e8c\u5206.md",sourceDirName:"Algorithm",slug:"/Algorithm/\u4e8c\u5206",permalink:"/docs/Algorithm/\u4e8c\u5206",draft:!1,editUrl:"https://github.com/ddupg/ddupg.github.io/blob/main/docs/Algorithm/\u4e8c\u5206.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"My Dosc",permalink:"/docs/intro"},next:{title:"\u94fe\u8868",permalink:"/docs/Algorithm/\u94fe\u8868"}},c={},u=[{value:"\u6570\u7ec4\u4e8c\u5206",id:"\u6570\u7ec4\u4e8c\u5206",level:2},{value:"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5de6\u4f4d\u7f6e",id:"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5de6\u4f4d\u7f6e",level:3},{value:"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u53f3\u4f4d\u7f6e",id:"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u53f3\u4f4d\u7f6e",level:3}],p={toc:u},m="wrapper";function s(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u6570\u7ec4\u4e8c\u5206"},"\u6570\u7ec4\u4e8c\u5206"),(0,i.kt)("p",null,"\u4e8c\u5206\u7684\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u4f46\u771f\u5b9e\u73b0\u8d77\u6765\u5751\u5f88\u591a\u3002\u8bb0\u5f55\u4e00\u4e2a\u6a21\u7248\uff0c\u8db3\u591f\u5e94\u4ed8\u5927\u90e8\u5206\u4e8c\u5206\u573a\u666f\u3002"),(0,i.kt)("h3",{id:"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5de6\u4f4d\u7f6e"},"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5de6\u4f4d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},"int binarySearch(int[] a, int n, int key) {\n    int l = 0, r = n - 1;\n    while (l < r) {\n        int m = l + (r - l ) / 2; // \u5411\u4e0b\u53bb\u6574\uff0c\u4e8c\u5206\u70b9\u504f\u5de6\n        if (a[m] < key) { // \u5148\u7b97\u5de6\u533a\u95f4\uff0c\u5224\u65ad\u8303\u56f4\u4e0d\u5305\u542b\u8fd4\u56de\u6761\u4ef6\uff0c\u8fd9\u91cc\u5c31\u662f\u4e0d\u80fd\u5305\u542ba[m]==key\n            l = m + 1; // m\u4e0d\u5728\u8fd4\u56de\u6761\u4ef6\u8303\u56f4\u5185\uff0cl\u81ea\u7136\u4e0d\u80fd\u53d6\n        } else {\n            r = m;\n        }\n    }\n    if (a[l] == key) {\n        return l;\n    }\n    return -1;\n}\n")),(0,i.kt)("h3",{id:"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u53f3\u4f4d\u7f6e"},"\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u53f3\u4f4d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},"int binarySearch(int[] a, int n, int key) {\n    int l = 0, r = n - 1;\n    while (l < r) {\n        int m = l + (r + 1 - l ) / 2; // \u5411\u4e0a\u53bb\u6574\uff0c\u4e8c\u5206\u70b9\u504f\u53f3\n        if (a[m] > key) { // \u5148\u7b97\u53f3\u533a\u95f4\uff0c\u5224\u65ad\u8303\u56f4\u4e0d\u5305\u542b\u8fd4\u56de\u6761\u4ef6\uff0c\u8fd9\u91cc\u5c31\u662f\u4e0d\u80fd\u5305\u542ba[m]==key\n            r = m - 1; // m\u4e0d\u5728\u8fd4\u56de\u6761\u4ef6\u8303\u56f4\u5185\uff0cr\u81ea\u7136\u4e0d\u80fd\u53d6\n        } else {\n            l = m;\n        }\n    }\n    if (a[l] == key) {\n        return l;\n    }\n    return -1;\n}\n")))}s.isMDXComponent=!0}}]);