"use strict";(self.webpackChunkddupg_github_io=self.webpackChunkddupg_github_io||[]).push([[5301],{3905:(e,r,o)=>{o.d(r,{Zo:()=>u,kt:()=>k});var n=o(7294);function t(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function c(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,n)}return o}function p(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?c(Object(o),!0).forEach((function(r){t(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function i(e,r){if(null==e)return{};var o,n,t=function(e,r){if(null==e)return{};var o,n,t={},c=Object.keys(e);for(n=0;n<c.length;n++)o=c[n],r.indexOf(o)>=0||(t[o]=e[o]);return t}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)o=c[n],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var a=n.createContext({}),s=function(e){var r=n.useContext(a),o=r;return e&&(o="function"==typeof e?e(r):p(p({},r),e)),o},u=function(e){var r=s(e.components);return n.createElement(a.Provider,{value:r},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var o=e.components,t=e.mdxType,c=e.originalType,a=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=s(o),d=t,k=l["".concat(a,".").concat(d)]||l[d]||m[d]||c;return o?n.createElement(k,p(p({ref:r},u),{},{components:o})):n.createElement(k,p({ref:r},u))}));function k(e,r){var o=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var c=o.length,p=new Array(c);p[0]=d;var i={};for(var a in r)hasOwnProperty.call(r,a)&&(i[a]=r[a]);i.originalType=e,i[l]="string"==typeof e?e:t,p[1]=i;for(var s=2;s<c;s++)p[s]=o[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},934:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>a,contentTitle:()=>p,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>s});var n=o(3117),t=(o(7294),o(3905));const c={},p=void 0,i={unversionedId:"\u6846\u67b6/powermock",id:"\u6846\u67b6/powermock",title:"powermock",description:"PowerMock",source:"@site/docs/\u6846\u67b6/powermock.md",sourceDirName:"\u6846\u67b6",slug:"/\u6846\u67b6/powermock",permalink:"/docs/\u6846\u67b6/powermock",draft:!1,editUrl:"https://github.com/ddupg/ddupg.github.io/blob/main/docs/\u6846\u67b6/powermock.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"netty",permalink:"/docs/\u6846\u67b6/netty"}},a={},s=[{value:"PowerMock",id:"powermock",level:2}],u={toc:s},l="wrapper";function m(e){let{components:r,...o}=e;return(0,t.kt)(l,(0,n.Z)({},u,o,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("h2",{id:"powermock"},"PowerMock"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://github.com/powermock/powermock"},"Github")),(0,t.kt)("p",null,"Maven\u914d\u7f6e"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-xml"},"<properties>\n    <powermock.version>2.0.2</powermock.version>\n</properties>\n\n<dependencies>\n    <dependency>\n        <groupId>org.powermock</groupId>\n        <artifactId>powermock-module-junit4</artifactId>\n        <version>${powermock.version}</version>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.powermock</groupId>\n        <artifactId>powermock-core</artifactId>\n        <version>${powermock.version}</version>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.powermock</groupId>\n        <artifactId>powermock-api-mockito2</artifactId>\n        <version>${powermock.version}</version>\n        <scope>test</scope>\n    </dependency>\n\n</dependencies>\n")),(0,t.kt)("p",null,"mock\u9759\u6001\u7c7b"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-java"},'import static org.powermock.api.mockito.PowerMockito.mockStatic;\nimport static org.powermock.api.mockito.PowerMockito.when;\n\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.core.classloader.annotations.PowerMockIgnore;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PowerMockIgnore({"javax.net.ssl.*", "javax.crypto.*"})\n@PrepareForTest({...})\npublic class SomethingTest {\n\n  @BeforeClass\n  public static void init() {\n    mockStatic(...); \n  }\n}\n')))}m.isMDXComponent=!0}}]);